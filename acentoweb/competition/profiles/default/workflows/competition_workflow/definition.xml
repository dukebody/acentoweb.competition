<?xml version="1.0"?>
<dc-workflow workflow_id="competition_workflow"
             title="Community Workflow"
             description=" - Users can create content that is immediately publicly accessible. - Content can be submitted for publication by the content's creator or a Manager, which is typically done to promote events or news to the front page. - Reviewers can publish or reject content, content owners can retract their submissions. - While the content is awaiting review it is readable by anybody. - If content is published, it can only be retracted by a Manager."
             state_variable="review_state"
             initial_state="private">
 <permission>Access contents information</permission>
 <permission>Change portal events</permission>
 <permission>Modify portal content</permission>
 <permission>View</permission>
 <state state_id="pending" title="Pending review">
  <description>Waiting to be reviewed, not editable by the owner.
</description>
  <exit-transition transition_id="hide"/>
  <exit-transition transition_id="publish"/>
  <exit-transition transition_id="reject"/>
  <exit-transition transition_id="retract"/>
  <permission-map name="Access contents information"
                  acquired="False">
   <permission-role>Anonymous</permission-role>
  </permission-map>
  <permission-map name="Change portal events"
                  acquired="False">
   <permission-role>Manager</permission-role>
   <permission-role>Reviewer</permission-role>
  </permission-map>
  <permission-map name="Modify portal content"
                  acquired="False">
   <permission-role>Manager</permission-role>
   <permission-role>Reviewer</permission-role>
  </permission-map>
  <permission-map name="View" acquired="False">
   <permission-role>Anonymous</permission-role>
  </permission-map>
 </state>
 <state state_id="private" title="Private">
  <description>Can only be seen and edited by the owner.
</description>
  <exit-transition transition_id="submit"/>
  <permission-map name="Access contents information"
                  acquired="False">
   <permission-role>Manager</permission-role>
   <permission-role>Owner</permission-role>
   <permission-role>Reader</permission-role>
   <permission-role>Editor</permission-role>
   <permission-role>Contributor</permission-role>
  </permission-map>
  <permission-map name="Change portal events"
                  acquired="False">
   <permission-role>Manager</permission-role>
   <permission-role>Owner</permission-role>
   <permission-role>Editor</permission-role>
  </permission-map>
  <permission-map name="Modify portal content"
                  acquired="False">
   <permission-role>Manager</permission-role>
   <permission-role>Owner</permission-role>
   <permission-role>Editor</permission-role>
  </permission-map>
  <permission-map name="View" acquired="False">
   <permission-role>Manager</permission-role>
   <permission-role>Owner</permission-role>
   <permission-role>Reader</permission-role>
   <permission-role>Editor</permission-role>
   <permission-role>Contributor</permission-role>
  </permission-map>
 </state>
 <state state_id="published" title="Published">
  <description>Visible to everyone, not editable by the owner.
</description>
  <exit-transition transition_id="reject"/>
  <exit-transition transition_id="retract"/>
  <permission-map name="Access contents information"
                  acquired="False">
   <permission-role>Anonymous</permission-role>
  </permission-map>
  <permission-map name="Change portal events"
                  acquired="False">
   <permission-role>Manager</permission-role>
  </permission-map>
  <permission-map name="Modify portal content"
                  acquired="False">
   <permission-role>Manager</permission-role>
  </permission-map>
  <permission-map name="View" acquired="False">
   <permission-role>Anonymous</permission-role>
  </permission-map>
 </state>
 <transition transition_id="publish"
             title="Judge publishes content"
             new_state="published" trigger="USER"
             before_script="" after_script="">
  <description>Publishing the item makes it visible to other users of the portal, even if they're not part of the judge.
</description>
  <action url="%(content_url)s/content_status_modify?workflow_action=publish"
          category="workflow">Publish</action>
  <guard>
   <guard-permission>Review portal content</guard-permission>
  </guard>
 </transition>
 <transition transition_id="reject"
             title="Judge sends content back because it is invalid"
             new_state="private" trigger="USER"
             before_script="" after_script="">
  <description>Sending the item back will return the item to the original author for him to improve it. You should preferably include a reason for why it was not valid for the competition.
</description>
  <action url="%(content_url)s/content_status_modify?workflow_action=reject"
          category="workflow">Send back</action>
  <guard>
   <guard-permission>Review portal content</guard-permission>
  </guard>
 </transition>
 <transition transition_id="submit"
             title="Member submits content for publication"
             new_state="pending" trigger="USER"
             before_script="" after_script="">
  <description>Submits your item for the judge to review and rate it.</description>
  <action url="%(content_url)s/content_status_modify?workflow_action=submit"
          category="workflow">Submit for publication</action>
  <guard>
   <guard-permission>Request review</guard-permission>
  </guard>
 </transition>
 <worklist worklist_id="reviewer_queue" title="">
  <description>Reviewer tasks
</description>
  <action url="%(portal_url)s/search?review_state=pending"
          category="global">Pending (%(count)d)</action>
  <guard>
   <guard-permission>Review portal content</guard-permission>
  </guard>
  <match name="review_state" values="pending"/>
 </worklist>
 <variable variable_id="action" for_catalog="False"
           for_status="True" update_always="True">
  <description>Previous transition
</description>
  <default>
   
   <expression>transition/getId|nothing</expression>
  </default>
  <guard>
  </guard>
 </variable>
 <variable variable_id="actor" for_catalog="False"
           for_status="True" update_always="True">
  <description>The ID of the user who performed the last transition
</description>
  <default>
   
   <expression>user/getId</expression>
  </default>
  <guard>
  </guard>
 </variable>
 <variable variable_id="comments" for_catalog="False"
           for_status="True" update_always="True">
  <description>Comment about the last transition
</description>
  <default>
   
   <expression>python:state_change.kwargs.get('comment', '')</expression>
  </default>
  <guard>
  </guard>
 </variable>
 <variable variable_id="review_history" for_catalog="False"
           for_status="False" update_always="False">
  <description>Provides access to workflow history
</description>
  <default>
   
   <expression>state_change/getHistory</expression>
  </default>
  <guard>
   <guard-permission>Request review</guard-permission>
   <guard-permission>Review portal content</guard-permission>
  </guard>
 </variable>
 <variable variable_id="time" for_catalog="False"
           for_status="True" update_always="True">
  <description>When the previous transition was performed
</description>
  <default>
   
   <expression>state_change/getDateTime</expression>
  </default>
  <guard>
  </guard>
 </variable>
</dc-workflow>
